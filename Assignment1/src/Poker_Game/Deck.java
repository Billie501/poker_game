 /*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/Classes/Class.java to edit this template
 */
package Poker_Game;

import java.awt.Image;
import java.awt.MediaTracker;
import java.util.ArrayList;
import javax.swing.ImageIcon;

/**
 *
 * @author user
 */
public class Deck {
    
    //Deck of cards is private to ensure changes are mafe in a controlled manner
    private ArrayList<Card> deck = new ArrayList<Card>();

    public Deck() {

        this.reset();
        this.shuffleDeck();

    }
    
    // Method to reset the deck by clearing it and adding all 52 cards
    public void reset() {
        
        String[] suits = {"spades", "clubs", "hearts", "diamonds"};
        String[] values = {"two", "three", "four", "five", "six", "seven", "eight", "nine", "ten", "jack", "queen", "king", "ace"};
        
        //clear the current deck
        this.deck.clear();
        
        //adding the card values which are value(rank), suit, image (this code is genreated by chatGPT).
        for (String suit : suits) {
        for (int i = 0; i < values.length; i++) {  // Start from 0 to access the first element "two"
            String cardName = values[i] + "_of_" + suit + ".png"; // Construct filename based on naming convention
            String imageName = "/Poker_Game/CardImages/" + cardName; 
            java.net.URL imgUrl = getClass().getResource(imageName);
            if (imgUrl == null) {
                System.err.println("Resource not found: " + imageName);
                continue; // Skip this card if the image is not found
            }
            ImageIcon icon = new ImageIcon(imgUrl);
                
                // Resize the image
            Image image = icon.getImage().getScaledInstance(50, 90, Image.SCALE_SMOOTH);
            icon = new ImageIcon(image); // Recreate ImageIcon with the new size
                
            int cardValue = i + 2; // Card values need to start from 2 for "two"
            this.deck.add(new Card(cardValue, suit, icon.getImage())); // Add card with image
        }
    }
    }
    //shuffleDeck() generated by ChatGPT
    // Method to shuffle the deck by randomizing the order of the cards
    public void shuffleDeck() {
        
        //create a temporary deck to hold the shuffled cards
        ArrayList<Card> tempDeck = new ArrayList<Card>();

        while (this.deck.size() > 0) {
            // Generate a random index within the bounds of the current deck size
            int randomIndex = ((int) (Math.random() * 100)) % this.deck.size();
            // Remove the card at the random index from the original deck and add it to the temp deck
            tempDeck.add(this.deck.remove(randomIndex));

        }
        // Assign the shuffled cards back to the original deck
        this.deck = tempDeck;
        this.deck = tempDeck;
        
    }

    public Card getCard() {
        // Remove and return the last card in the deck (top card)
        return this.deck.remove(this.deck.size() - 1);

    }
    
    // Method to get the number of remaining cards in the deck
    public int getRemainingCount() {
        return this.deck.size();
    }

    
}
